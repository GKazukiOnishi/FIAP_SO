Exercícios

	1.
		Em servidores Web é muito comum ter a arquitetura de um Thread despachante que cria uma thread operária para cada requisição
		
		Se uma thread de operária ficar bloqueada, só ela fica
		
		Cada pedido requer em média 2ms de CPU e 8 ms de E/S (disco rígido)
		Quantos clientes podem ser atendidos por segundo para cada uma das seguintes situações:
		
		Obs: Só há um disco rígido para todas as threads do servidor
		
		Obs: Cache de disco
			Para trabalhar com várias threads interagindo com o disco, tiveram várias ideias:
				1. Ler vários bytes paralelos e depois separar
				2. Ex: Quando criamos um projeto, várias pastas surgem juntas
					Daí surgiu a ideia de cache de disco
					
					Quando formos ler algo, o disco passa por várias regiões que não seriam usadas
					Nisso fazemos o disco ler tudo no caminho e colocar no cache
					
					75% é um valor não realista, 10% 15% já é muito
		
		a) Se o servidor operar com um thread
			
			Estados: Execução, Bloqueado e Pronto
				Processos só finalizam no estado de execução, caso contrário não faz sentido
				Porém em termos de análise podemos considerar primeiro todo CPU e depois E/S
				Algo mais realista seria (1,9 ms de CPU, 8 ms de E/S, 0,1 ms de CPU)
			
			Vamos considerar a execução sendo 2 ms de CPU e 8 ms de E/S
			
			1 s = 1000 ms
			1000 / (2 + 8) = 100 req/s
		
		b) dois threads
		
			. -> 1 ms da primeira thread
			/ -> 1 ms de E/S da primeira thread
			* -> 1 ms da segunda thread
			\ -> 1 ms de E/S da segunda thread
			
			..////////..      ////////
			  **      \\\\\\\\**      \\\\\\\\
			
			Excluindo os 2 primeiros ms, teríamos 8 ms por pedido
			
			Nº Pedidos = (1000 - 2) / 8 = 124,75 req/s ou desconsiderando os 2 ms temos 125 req/s
			
		c) dois threads e um cache de bloco de disco com taxa de acerto de 75% e tempo de resposta desprezível
		
			75% vem do cache
			E/S do processo = (0,25 * 8 ms) = 2 ms
			
			Nº pedidos = (1000 - 2) / 2 = 449 req/s
		
		d) dois threads e um cache de bloco de disco com taxa de acerto de 75% e tempo de resposta da cache de 0,5 ms
		
			E/S do processo = (0,5 ms + 0,25 * 8 ms) = 2,5 ms
			
			Nº pedidos = (1000 ms - 2 ms) / 2,5 ms = 399,2 req/s
	
	2.
		Q (quantum), fatia de tempo
		
		S = Sobrecarga de 7ms
		
		Qual o valor da fatia de tempo Q para que a sobrecarga seja de 5%
		
		Se o processo dura 25ms
		Temos 20ms de CPU e 5 ms de overhead
		S (%) = 5 ms / (20 ms + 5 ms) = 20%
		
		S / (Q + S) = 0,05
		
		S = 0,05 * (Q + S)
		S = 0,05Q + 0,05S
		0,95S = 0,05Q
		Q = 0,95 / 0,05 = 19 * 7 ms = 133 ms
		
	3.
		Sistema de tempo real
		
		Chamadas de áudio - Periodicidade = 5 ms CPU de 1 ms
		Fluxo de vídeo - periodicidade de 30 ms com tempo de CPU de 10 ms
		
		Somatorio CPU / Somatorio P <= 1
		
		4 * (1ms/5ms) + 1 * (10ms/30ms) <= 1
		4 * 0.20 + 1 * 0.33 <= 1
		0.8 + 0.33 <= 1
		Não é menor ou igual a 1
		
		Portanto seria necessário reduzir tempo de CPU melhorando
		Aumentar a periodicidade
		Ou reduzir eventos
		
	4.
		3 programas carregados na memória ao mesmo tempo
		Cada processo passa 40% do tempo esperando por E/S
		Qual a utilização da CPU
		
		Utilização da CPU = 1 - p^n
		(Grau de utilização da CPU)
		
		O P1 roda e fica bloquado em 40% do tempo
		Aí temos o P2, ele roda e fica bloqueado 40%
		Aí temos P3 e depois fica bloqueado 40%
		Depois CPU fica ociosa
		
		Se 40% é o P1 bloqueado, a chance de estar bloqueado é 40%
		Qual a chance do P1 e P2 estar bloqueado? 40% * 40%
		Qual a chance de todos estarem bloqueados? 40% * 40% * 40%
		
		Daí que vem a fórmula
		
		Portanto, temos 1 - p^n
		1 - 0,4^3 = 0,936 = 93,6%
		Utilização da CPU = 93,6%
	
	5. 
		Se PC tem 4 GB de RAM, SO usa 512 MB
		Os processos ocupam 256 MB cada um
		Se o objeto é usar 99% da CPU, qual é a espera de E/S máxima que pode ser tolerada
		
		n = (4.096 MB - 512 MB) / 256 MB = 14
		Portanto temos 14 processos na memória ao mesmo tempo
		
		Utilização da CPU = 1 - p^n = 1 - p^14 = 0,99
		p^14 = 1 - 0,99
		p^14 = 0,01
		p = 0,01^(1/14)
		p ~ 0,72
		Espera de E/S máxima de 72%
		